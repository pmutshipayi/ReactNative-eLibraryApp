
@{
    ViewData["Title"] = "Update";
}
@using  ILabrary.ModelViews.Libraries
@using  ILabrary.Services.Libraries
@model LibraryUserUpdateViewModel
@inject ILibrarySessionService libraryService

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom">
    <div class="btn-toolbar mb-2 mb-md-0">
        <a asp-area="" asp-controller="LibraryUser" asp-action="Index" class="btn btn-sm btn-outline-secondary">
            <span data-feather="arrow-left"></span>
        </a> <span style="width:10px"></span>
        <h1 class="h4"></h1>
        <div class="btn-group mr-2">

        </div>
    </div>
</div>
<style>
    .field-validation-error {
        color: red
    }
</style>
<form method="post" style="width:600px;margin-left:auto;margin-right:auto">
    @if (TempData["updated"] != null)
    {
        @if ((bool)TempData["updated"])
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <strong>Done!</strong> The account has been updated successfully.
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }
        else
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <strong>Hoops!</strong> The update failed.
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }
    }
    <div class="form-row">
        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.FirstName)
            @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.FirstName)
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.LastName)
            @Html.TextBoxFor(x => x.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.LastName)
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-md-8">
            @Html.LabelFor(x => x.Username)
            @Html.TextBoxFor(x => x.Username, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Username)
        </div>
        <div class="form-group col-md-4">
            <label style="visibility:hidden">Hidden</label>
            <input type="text" class="form-control" disabled value="@Html.Raw("@")@libraryService.GetCurrentLibraryUniqueId()">
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Email)
        @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Email)
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Phone)
        @Html.TextBoxFor(x => x.Phone, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Phone)
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Password)
        @Html.PasswordFor(x => x.Password, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Password)
    </div>
    <button type="submit" class="btn btn-primary">Update</button>
</form>